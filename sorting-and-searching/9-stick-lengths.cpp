////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include<bits/stdc++.h>
#define ll long long int
#define MOD 1000000007
#define mp make_pair
#define pb push_back
#define all(t) (t).begin(), (t).end()
#define pii pair<int, int>
#define vi vector<int>
#define vvi vector<vector<int>>
#define vpi vector<pair<int, int>>

using namespace std;

void solve();

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	
	#ifndef ONLINE_JUDGE
		freopen("input.txt", "r", stdin);
		freopen("error.txt", "w", stderr);
		freopen("output.txt", "w", stdout);
	#endif
	
	/****** Choose MEDIAN *********
	* For heavily tipped number-sets (eg. 2 2 3 101), median will give the minimum sum of differences
	* For almost balanced number-sets (2 2 55 101), (2 2 95 101), mean and median give the same sum of differences
	* The differences ADD UP
	*/
	
	int n; cin >> n;
	vi v(n);
	
	for (int i = 0; i < n; i++)
		cin >> v[i];
	
	sort(all(v));
	
	ll x = v[n / 2];
	ll res = 0;
	
	for (int i = 0; i < n; i++)
		res += abs(v[i] - x);
	
	cout << res << "\n";
	
	cerr << "time taken: " << (float)clock()/CLOCKS_PER_SEC << " secs" << endl;
	return 0;
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
