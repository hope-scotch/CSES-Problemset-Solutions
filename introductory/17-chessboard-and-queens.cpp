////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include<bits/stdc++.h>
#define ll long long int
#define MOD 1000000007
#define mp make_pair
#define pb push_back
#define all(t) (t).begin(), (t).end()
#define pii pair<int, int>
#define vi vector<int>
#define vvi vector<vector<int>>
#define vpi vector<pair<int, int>>

using namespace std;

int solve(vector<string>& v, vector<bool>& col, vector<bool>& diagl, vector<bool>& diagr, int x) {
	if (x == 0)
		return 1;
	
	int res = 0;
	
	for (int y = 0; y < 8; y++) {
		if (col[y] || diagl[y + x] || diagr[x - y + 7] || v[x - 1][y] == '*') continue;
		
		col[y] = diagl[y + x] = diagr[x - y + 7] = true;
		res += solve(v, col, diagl, diagr, x - 1);
		col[y] = diagl[y + x] = diagr[x - y + 7] = false;
	}
	
	return res;
}
		

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	
	#ifndef ONLINE_JUDGE
		freopen("input.txt", "r", stdin);
		freopen("error.txt", "w", stderr);
		freopen("output.txt", "w", stdout);
	#endif
	
	vector<string> v(8);
	
	for (int i = 0; i < 8; i++)
		cin >> v[i];
	
	vector<bool> col(8, false), diagl(16, false), diagr(16, false);
	
	cout << solve(v, col, diagl, diagr, 8);
	
	cerr << "time taken: " << (float)clock()/CLOCKS_PER_SEC << " secs" << endl;
	return 0;
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
